// -- Module: <api> --
package

package api {
    @api.ExperimentalAPI public fun function(): kotlin.String

    @kotlin.Experimental(level = ExperimentalLevel.WARNING, scope = ExperimentalScope.SOURCE_ONLY) @kotlin.annotation.Target(allowedTargets = {AnnotationTarget.TYPE, AnnotationTarget.CLASS, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY, AnnotationTarget.TYPEALIAS, AnnotationTarget.VALUE_PARAMETER}) public final annotation class ExperimentalAPI : kotlin.Annotation {
        public constructor ExperimentalAPI()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}


// -- Module: <usage> --
package

package api {
}

package usage {
    public fun use(): kotlin.Unit
}
